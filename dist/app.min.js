angular.module("app", [ "ui.router", "app.template" ]);

(function() {
    angular.module("app").controller("case1Controller", Case1Controller);
    Case1Controller.$inject = [ "$scope", "colors" ];
    function Case1Controller($scope, colors) {
        $scope.rawdata = colors;
        $scope.colorsUppercase = colors;
        $scope.colorLengths = colors.map(function(color) {
            var obj = {};
            obj[color] = color.length;
            return obj;
        });
    }
})();

(function() {
    angular.module("app").controller("case3Controller", Case3Controller);
    Case3Controller.$inject = [ "$scope", "employees" ];
    function Case3Controller($scope, employees) {
        var apeldoornEmployees = employees, totalAge;
        $scope.employees = apeldoornEmployees;
        $scope.totalAge = totalAge;
    }
})();

(function() {
    angular.module("app").controller("checkSolutionController", CheckSolutionController);
    CheckSolutionController.$inject = [ "$scope", "$element" ];
    function CheckSolutionController($scope, $element) {
        var checksums = {
            colorsUppercase: 305671123,
            colorLengths: 306101416
        };
        console.log($scope.data, $scope.name, checksum($scope.data), checksums[$scope.name]);
        if (checksum($scope.data) === checksums[$scope.name]) {
            $element.addClass("solved");
        }
    }
    function checksum(data) {
        var i, chk = 305419896, s = JSON.stringify(data) || "";
        for (i = 0; i < s.length; i++) {
            chk += s.charCodeAt(i) * (i + 1);
        }
        return chk;
    }
})();

(function() {
    angular.module("app").directive("checkSolution", CheckSolutionDirective);
    function CheckSolutionDirective() {
        return {
            restrict: "A",
            scope: {
                data: "=checkSolution",
                name: "@"
            },
            controller: "checkSolutionController",
            controllerAs: "checkSolution"
        };
    }
})();

(function() {
    angular.module("app").factory("dataService", DataService);
    DataService.$inject = [ "$http" ];
    function DataService($http) {
        "use strict";
        return {
            get: getData
        };
        function getData(name) {
            return $http.get("./data/" + name + ".json").then(function(response) {
                return response.data;
            }).catch(function(error) {
                console.log("Something went wrong!", error);
            });
        }
    }
})();

(function() {
    angular.module("app").config(routes);
    routes.$inject = [ "$stateProvider", "$urlRouterProvider" ];
    function routes($stateProvider, $urlRouterProvider) {
        $urlRouterProvider.otherwise("/");
        $stateProvider.state("main", {
            url: "/",
            templateUrl: "main/main.html",
            controller: "mainController"
        }).state("case1", {
            url: "/case1",
            templateUrl: "case1/case1.html",
            controller: "case1Controller",
            resolve: {
                colors: [ "dataService", function(dataService) {
                    console.log("resolving colors");
                    return dataService.get("colors");
                } ]
            }
        }).state("case3", {
            url: "/case3",
            templateUrl: "case3/case3.html",
            controller: "case3Controller",
            resolve: {
                employees: [ "dataService", function(dataService) {
                    return dataService.get("employees");
                } ]
            }
        });
    }
})();

(function() {
    angular.module("app").controller("mainController", MainController);
    MainController.$inject = [];
    function MainController() {}
})();

(function() {
    angular.module("app").controller("prettyJsonController", PrettyJsonController);
    PrettyJsonController.$inject = [ "$scope", "$sce" ];
    function PrettyJsonController($scope, $sce) {
        $scope.prettyJson = $sce.trustAsHtml(prettyJson($scope.data));
        function prettyJson(json) {
            var jsonRegex = /("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g;
            if (typeof json !== "string") {
                json = JSON.stringify(json, undefined, 2);
            }
            json = json.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            return json.replace(jsonRegex, function(match) {
                var cls = "number";
                if (/^"/.test(match)) {
                    if (/:$/.test(match)) {
                        cls = "key";
                    } else {
                        cls = "string";
                    }
                } else if (/true|false/.test(match)) {
                    cls = "boolean";
                } else if (/null/.test(match)) {
                    cls = "null";
                }
                return '<span class="' + cls + '">' + match + "</span>";
            });
        }
    }
})();

(function() {
    angular.module("app").directive("prettyJson", PrettyJsonDirective);
    function PrettyJsonDirective() {
        return {
            restrict: "E",
            templateUrl: "prettyJson/prettyJson.html",
            scope: {
                data: "=",
                name: "@"
            },
            controller: "prettyJsonController",
            controllerAs: "prettyJson"
        };
    }
})();

angular.module("app.template", []).run([ "$templateCache", function($templateCache) {
    $templateCache.put("case1/case1.html", "<h2>Case 1: Mapping colors</h2>\n" + "\n" + "<p>\n" + "    The incoming data is a simple array with color names (strings). Modify case1.controller.js to\n" + "    change the output into the following formats:\n" + "</p>\n" + "\n" + "<hr>\n" + "\n" + "<h3>Uppercase ($scope.colorsUppercase)</h3>\n" + "<p>Output each color name entirely in uppercase</p>\n" + "\n" + '<section class="solution" check-solution="colorsUppercase" name="colorsUppercase">\n' + '    <span ng-repeat="color in colorsUppercase">{{color}} </span>\n' + "</section>\n" + "\n" + "<hr>\n" + "\n" + "<h3>Length of color ($scope.colorLenghts)</h3>\n" + "\n" + "<p>Turn each color into a key-value pair (object) where the key is the color name and the value is the\n" + 'length of that name (e.g. <code> { "red": 3 } </code>)</p>\n' + "\n" + '<ul class="solution" check-solution="colorLengths" name="colorLengths">\n' + '    <li ng-repeat="obj in colorLengths">\n' + "        <code>{{obj}}</code>\n" + "    </li>\n" + "</ul>\n" + "\n" + "<hr>\n" + "\n" + '<pretty-json name="colors" data="rawdata"></pretty-json>\n' + "");
    $templateCache.put("case3/case3.html", "<h2>Case 3: Apeldoorn medewerkers</h2>\n" + "<ul>\n" + '    <li class="employee" ng-repeat="employee in employees">\n' + "        {{employee.firstname}} {{employee.lastname}} ({{employee.job}}, {{employee.location}})\n" + "    </li>\n" + "</ul>\n" + "\n" + "Total age: {{totalAge}}\n" + "\n" + '<check-solution name="employees" data="employees"></check-solution>\n' + "\n" + '<pretty-json name="employees" data="employees"></pretty-json>\n' + "");
    $templateCache.put("checkSolution/checkSolution.html", "<section>\n" + "    Solved? {{solved}}\n" + "</section>\n" + "\n" + "");
    $templateCache.put("main/main.html", "<h1>Welkom!</h1>\n" + "\n" + "Kies een case om te beginnen.");
    $templateCache.put("prettyJson/prettyJson.html", "<section>\n" + "    <h4>Raw data ({{name}}):</h4>\n" + '    <pre ng-bind-html="prettyJson"></pre>\n' + "</section>\n" + "\n" + "");
} ]);
