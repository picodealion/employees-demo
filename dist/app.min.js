angular.module("app",["ui.router","app.template"]);(function(){"use strict";angular.module("app").controller("case1Controller",Case1Controller);Case1Controller.$inject=["$scope","colors"];function Case1Controller($scope,colors){$scope.rawdata=colors;$scope.colorsUppercase=colors;$scope.colorsDouble=colors;$scope.colorLengths=colors}function doubleString(str){return str+str}})();(function(){"use strict";angular.module("app").controller("case2Controller",Case2Controller);Case2Controller.$inject=["$scope","movies"];function Case2Controller($scope,movies){$scope.rawdata=movies;$scope.chronological=movies.slice(0);$scope.favorites=movies;$scope.badMovies=movies}})();(function(){"use strict";angular.module("app").controller("case3Controller",Case3Controller);Case3Controller.$inject=["$scope","groceries"];function Case3Controller($scope,groceries){$scope.rawdata=groceries;$scope.totalPrice=0;$scope.totalDiscount=0;$scope.allItems=[]}})();(function(){"use strict";angular.module("app").controller("case4Controller",Case4Controller);Case4Controller.$inject=["$scope","employees"];function Case4Controller($scope,employees){$scope.employees=employees;$scope.apeldoornFE=employees;$scope.totalAge=0}})();(function(){"use strict";angular.module("app").controller("checkSolutionController",CheckSolutionController);CheckSolutionController.$inject=["$scope","$element"];function CheckSolutionController($scope,$element){var checksums={colorsUppercase:305671123,colorsDouble:306454031,colorLengths:308465390,chronological:369639269,favorites:307386920,badMovies:308216905,totalPrice:305420647,totalDiscount:305427291,allItems:308625360,apeldoornFE:319309724,totalAge:305420216};console.log($scope.data,$scope.name,checksum($scope.data),checksums[$scope.name]);if(checksum($scope.data)===checksums[$scope.name]){$element.addClass("solved")}}function checksum(data){var i,chk=305419896,s=JSON.stringify(data)||"";for(i=0;i<s.length;i++){chk+=s.charCodeAt(i)*(i+1)}return chk}})();(function(){"use strict";angular.module("app").directive("checkSolution",CheckSolutionDirective);function CheckSolutionDirective(){return{restrict:"A",scope:{data:"=checkSolution",name:"@"},controller:"checkSolutionController",controllerAs:"checkSolution"}}})();(function(){"use strict";angular.module("app").factory("dataService",DataService);DataService.$inject=["$http"];function DataService($http){"use strict";return{get:getData};function getData(name){return $http.get("./data/"+name+".json").then(function(response){return response.data}).catch(function(error){throw new Error("Unable to fetch data: "+error.statusText)})}}})();(function(){"use strict";angular.module("app").config(routes);routes.$inject=["$stateProvider","$urlRouterProvider"];function routes($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/");$stateProvider.state("main",{url:"/",templateUrl:"main/main.html"}).state("case1",{url:"/case1",templateUrl:"case1/case1.html",controller:"case1Controller",resolve:{colors:["dataService",function(dataService){return dataService.get("colors")}]}}).state("case2",{url:"/case2",templateUrl:"case2/case2.html",controller:"case2Controller",resolve:{movies:["dataService",function(dataService){return dataService.get("movies")}]}}).state("case3",{url:"/case3",templateUrl:"case3/case3.html",controller:"case3Controller",resolve:{groceries:["dataService",function(dataService){return dataService.get("groceries")}]}}).state("case4",{url:"/case4",templateUrl:"case4/case4.html",controller:"case4Controller",resolve:{employees:["dataService",function(dataService){return dataService.get("employees")}]}})}})();(function(){"use strict";angular.module("app").controller("mainController",MainController);MainController.$inject=[];function MainController(){}})();(function(){"use strict";angular.module("app").controller("prettyJsonController",PrettyJsonController);PrettyJsonController.$inject=["$scope","$sce"];function PrettyJsonController($scope,$sce){$scope.prettyJson=$sce.trustAsHtml(prettyJson($scope.data));function prettyJson(json){var jsonRegex=/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g;if(typeof json!=="string"){json=JSON.stringify(json,undefined,2)}json=json.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");return json.replace(jsonRegex,function(match){var cls="number";if(/^"/.test(match)){if(/:$/.test(match)){cls="key"}else{cls="string"}}else if(/true|false/.test(match)){cls="boolean"}else if(/null/.test(match)){cls="null"}return'<span class="'+cls+'">'+match+"</span>"})}}})();(function(){"use strict";angular.module("app").directive("prettyJson",PrettyJsonDirective);function PrettyJsonDirective(){return{restrict:"E",templateUrl:"prettyJson/prettyJson.html",scope:{data:"=",name:"@"},controller:"prettyJsonController",controllerAs:"prettyJson"}}})();angular.module("app.template",[]).run(["$templateCache",function($templateCache){$templateCache.put("case1/case1.html","<h2>Case 1: Mapping colors</h2>\n"+"\n"+"<p>\n"+"    The incoming data is a simple array with color names (strings). Modify case1.controller.js to\n"+"    change the output into the following formats:\n"+"</p>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Uppercase ($scope.colorsUppercase)</h3>\n"+"<p>Output each color name entirely in uppercase</p>\n"+"\n"+'<section class="solution" check-solution="colorsUppercase" name="colorsUppercase">\n'+'    <span ng-repeat="color in colorsUppercase">{{color}} </span>\n'+"</section>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Duplicate color names ($scope.colorsDouble)</h3>\n"+"<p>\n"+'    Use the <code>doubleString</code> helper function to duplicate the color name (e.g. "redred", "blueblue")\n'+"</p>\n"+"\n"+'<section class="solution" check-solution="colorsDouble" name="colorsDouble">\n'+'    <span ng-repeat="color in colorsDouble">{{color}} </span>\n'+"</section>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Length of color ($scope.colorLenghts)</h3>\n"+"\n"+"<p>Turn each color into an object with two properties: the color name and the length of\n"+'    that name (e.g. <code> { "name": "red", "length": 3 } </code>)</p>\n'+"\n"+'<ul class="solution" check-solution="colorLengths" name="colorLengths">\n'+'    <li ng-repeat="obj in colorLengths">\n'+"        <code>{{obj}}</code>\n"+"    </li>\n"+"</ul>\n"+"\n"+"<hr>\n"+"\n"+'<pretty-json name="colors" data="rawdata"></pretty-json>\n'+"");$templateCache.put("case2/case2.html","<h2>Case 2: Filtering and sorting movies</h2>\n"+"\n"+"<p>\n"+"    The incoming data is a list of movies as an array of objects (see the raw data).\n"+"    Use <code>filter</code> and <code>sort</code> in case2.controller.js to output\n"+"    them in the following ways:\n"+"</p>\n"+"<p>\n"+"    NOTE: <code>sort</code> alters the original array. Always make a copy of the original array\n"+"    using <code>movies.slice(0)</code> before sorting, otherwise you'll get unexpected results.\n"+"</p>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Chronological order ($scope.chronological)</h3>\n"+"<p>Sort the movies by year (oldest first)</p>\n"+"\n"+'<table class="solution" check-solution="chronological" name="chronological">\n'+"    <tr>\n"+"        <th>Title</th>\n"+"        <th>Year</th>\n"+"        <th>Rating</th>\n"+"    </tr>\n"+'    <tr ng-repeat="movie in chronological">\n'+"        <td>{{movie.title}}</td>\n"+"        <td>{{movie.year}}</td>\n"+"        <td>{{movie.rating}}</td>\n"+"    </tr>\n"+"</table>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Favorites ($scope.favorites)</h3>\n"+"<p>\n"+"    Filter the list so only movies with a rating of 8 or higher appear. Sort them by\n"+"    rating (descending).\n"+"</p>\n"+"\n"+"\n"+'<table class="solution" check-solution="favorites" name="favorites">\n'+"    <tr>\n"+"        <th>Title</th>\n"+"        <th>Year</th>\n"+"        <th>Rating</th>\n"+"    </tr>\n"+'    <tr ng-repeat="movie in favorites">\n'+"        <td>{{movie.title}}</td>\n"+"        <td>{{movie.year}}</td>\n"+"        <td>{{movie.rating}}</td>\n"+"    </tr>\n"+"</table>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Bad movies ($scope.badMovies)</h3>\n"+"\n"+"<p>\n"+"    List all movies from an even year with a score below 6, sorted alphabetically\n"+"</p>\n"+"\n"+'<table class="solution" check-solution="badMovies" name="badMovies">\n'+"    <tr>\n"+"        <th>Title</th>\n"+"        <th>Year</th>\n"+"        <th>Rating</th>\n"+"    </tr>\n"+'    <tr ng-repeat="movie in badMovies">\n'+"        <td>{{movie.title}}</td>\n"+"        <td>{{movie.year}}</td>\n"+"        <td>{{movie.rating}}</td>\n"+"    </tr>\n"+"</table>\n"+"\n"+"<hr>\n"+"\n"+'<pretty-json name="movies" data="rawdata"></pretty-json>\n'+"");$templateCache.put("case3/case3.html","<h2>Case 3: Reducing groceries</h2>\n"+"\n"+"<p>\n"+"    The input data is a list of groceries you just bought from Albert Heijn. Use the <code>reduce</code>\n"+"    method in case3.controller.js to do calculations on the prices.\n"+"\n"+"    The discount (where applicable) is in euros per unit and has already been deducted from\n"+"    the item's price.\n"+"</p>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Total price ($scope.totalPrice)</h3>\n"+"<p>\n"+"    Calculate the total price by multiplying the price per unit with the amount bought.\n"+"</p>\n"+"\n"+'<section class="solution" check-solution="totalPrice" name="totalPrice">\n'+"    Total price: € {{totalPrice}}\n"+"</section>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Total discount ($scope.totalDiscount)</h3>\n"+"<p>\n"+"    Find all the items that have a <code>discount</code> property and use that to calculate\n"+"    the total amount you saved while shopping. You also have a coupon for € 2.50 discount so\n"+"    add that to the calculation as well!\n"+"</p>\n"+"\n"+'<section class="solution" check-solution="totalDiscount" name="totalDiscount">\n'+"    Total discount: € {{totalDiscount | number:2}}\n"+"</section>\n"+"\n"+"\n"+"<hr>\n"+"\n"+"<h3>Every item counts ($scope.allItems)</h3>\n"+"<p>\n"+"    The cashier doesn't care about maths, she just scans item one by one.\n"+"    Turn the grocery list into an array of item names, repeating items you bought more than\n"+'    one of. (Items with a unit of <code>"kg"</code> only count as one item). Example:\n'+"</p>\n"+"\n"+'<pre>[ "AH Tijger wit", "AH Tijger wit", "Appels Jonagold", "Chiquita bananen", ... ]</pre>\n'+"\n"+"<p>\n"+"    Note: the resulting array has more items than the original data, so <code>map</code> won't work.\n"+"    Use <code>reduce</code> to create the new list.\n"+"</p>\n"+"\n"+'<ul class="solution" check-solution="allItems" name="allItems">\n'+'    <li ng-repeat="item in allItems track by $index">{{item}}</li>\n'+"</ul>\n"+"\n"+'<pretty-json name="groceries" data="rawdata"></pretty-json>\n'+"\n"+"");$templateCache.put("case4/case4.html","<h2>Case 3: Combining methods</h2>\n"+"\n"+"<p>\n"+"    The incoming data is an array of some Luminis epmployees (with fictional ages,\n"+"    don't take offense please). Use the methods from the previous cases to return the following\n"+"    data:\n"+"</p>\n"+"\n"+"<p>\n"+"    NOTE: Changing an object's property when mapping also changes the original array. Always\n"+"    copy an object before modifying it!\n"+"</p>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Apeldoorn Front-end Developers ($scope.apeldoornFE)</h3>\n"+"\n"+"<p>\n"+"    Return all front-end developers from Apeldoorn, ordered by age (ascending). I've forgotten\n"+"    how to use numbered lists in HTML, so also add a property <code>order</code> to each employee,\n"+"    which contains the index (1-based) after sorting. Also convert the <code>smoker</code>\n"+"    property to a boolean so the checkbox works correctly.\n"+"</p>\n"+"\n"+'<ul class="solution" check-solution="apeldoornFE" name="apeldoornFE" style="list-style-type: none">\n'+'    <li class="clearfix" ng-repeat="employee in apeldoornFE">\n'+"        {{employee.order || '?'}}:  {{employee.firstname}} {{employee.lastname}} ({{employee.job}}, {{employee.location}})\n"+'        <span class="right">Smoker: <input type="checkbox" ng-model="employee.smoker" /></span>\n'+"    </li>\n"+"</ul>\n"+"\n"+"<hr>\n"+"\n"+"<h3>Combined age of all men ($scope.cobinedAge)</h3>\n"+"\n"+"<p>\n"+"    Return the combined age of all men. Add 2 years per smoker because it makes them look older,\n"+"    but subtract 5 from the total because Danh looks so young.\n"+"</p>\n"+"\n"+'<div class="solution" check-solution="totalAge" name="totalAge">Total age: {{totalAge}}</div>\n'+"\n"+'<check-solution name="employees" data="employees"></check-solution>\n'+"\n"+'<pretty-json name="employees" data="employees"></pretty-json>\n'+"");$templateCache.put("checkSolution/checkSolution.html","<section>\n"+"    Solved? {{solved}}\n"+"</section>\n"+"\n"+"");$templateCache.put("main/main.html","<h1>Howdy!</h1>\n"+"\n"+"Pick a case to get started!");$templateCache.put("prettyJson/prettyJson.html","<section>\n"+"    <h4>Raw data ({{name}}):</h4>\n"+'    <pre ng-bind-html="prettyJson"></pre>\n'+"</section>\n"+"\n"+"")}]);
